name: CI

on: [push]

jobs:

  prepare:
    runs-on: ubuntu-latest

    if: "! contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  build:
    runs-on: ubuntu-latest

    needs: prepare

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: passwd
        ports:
          - 5432:5432
      chrome:
        image: selenium/standalone-chrome:3.141.59
        ports:
          - 4444:4444

    container:
      image: ruby:2.6.3

    steps:
    - uses: actions/checkout@v1

    - name: Install dependent packages
      run: sudo apt-get install libpq-dev

    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          ${{ runner.os }}-gem-

    - name: Install gems
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --with test

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(./bin/yarn cache dir)"

    - name: Cache yarn
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys:
          ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          ${{ runner.os }}-yarn-

    - name: Install node modules
      run: ./bin/yarn

    - name: Lint
      run: |
        bundle exec rubocop
        bundle exec slim-lint app/views/

    - name: Setup Database
      run: |
        ./bin/rails db:create
        ./bin/rails db:schema:load
      env:
        RAILS_ENV: test
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: passwd

    - name: Javascript packing
      run: ./bin/webpack

    - name: Spec
      run: ./bin/rspec
      env:
        CI: true
        CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: passwd
        SELENIUM_HOST: localhost
        SELENIUM_POST: 4444

    - name: Security check
      run: bundle exec brakeman -4 -A -w 1 -z
