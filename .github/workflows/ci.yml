name: CI

container: &container
  image: ruby:2.7.1
  env:
    POSTGRES_HOST: db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: passwd

gem-cache: &gem-cache
  name: Cache gems
    uses: actions/cache@v1
    with:
      path: vendor/bundle
      key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
      restore-keys: |
        ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        ${{ runner.os }}-gem-

yarn-cache-dir: &yarn-cache-dir
  name: Get yarn cache
    id: yarn-cache
    run: echo "::set-output name=dir::$(./bin/yarn cache dir)"

yarn-cache: &yarn-cache
  name: Cache yarn
    uses: actions/cache@v1
    with:
      path: ${{ steps.yarn-cache.outputs.dir }}
      key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      restore-keys:
        ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        ${{ runner.os }}-yarn-

on: [push]

jobs:

  prepare:
    runs-on: ubuntu-latest

    if: "! contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  build:
    runs-on: ubuntu-latest

    needs: prepare

    <<: *container

    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.7
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.7.x

    - name: Install dependent packages
      run: sudo apt-get install -y --no-install-recommends libpq-dev

    - name: Upload apt packages
      uses: actions/upload-artifact@v1
      with:
        name: use-dir
        path: /use

    - *gem-cache

    - name: Install gems
      run: |
        bundle config path vendor/bundle
        bundle config with test
        bundle install --jobs 4 --retry 3

    - *yarn-cache-dir
    - *yarn-cache

    - name: Install node modules
      run: ./bin/yarn

    - name: Lint
      run: |
        bundle exec rubocop
        bundle exec slim-lint app/views/

  test:
    runs-on: ubuntu-latest

    needs: build

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: passwd
        ports:
          - 5432:5432
      chrome:
        image: selenium/standalone-chrome:3.141.59
        ports:
          - 4444:4444

    <<: *container

    steps:
    - uses: actions/checkout@v1

    - name: Download apt packages
      uses: actions/download-artifact@v1
      with:
        name: usr-dir

    - *gem-cache

    - *yarn-cache-dir
    - *yarn-cache

    - name: Setup Database
      run: |
        ./bin/rails db:create
        ./bin/rails db:schema:load
      env:
        RAILS_ENV: test
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: passwd

    - name: Javascript packing
      run: ./bin/webpack

    - name: Spec
      run: ./bin/rspec
      env:
        CI: true
        CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: passwd
        DISABLE_SPRING: 1
        SELENIUM_HOST: localhost
        SELENIUM_POST: 4444

    - name: Security check
      run: bundle exec brakeman -4 -A -w 1 -z
